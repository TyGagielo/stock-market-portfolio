{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap';\nimport sampleData from './sampleData';\nimport StockList from './StockList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Uncomment setMyName if required, for example, if the name\n  // is stored in the DynamoDB\n  const [myName /*, setMyName*/] = useState('Roger');\n  const [stocks, setStocks] = useState([]);\n  const [stockList, setStockList] = useState([]);\n\n  // Retrieve the current stock information when the page first loads\n  useEffect(() => {\n    setStocks(sampleData);\n  }, []);\n\n  // With the stock data add purchase value, current price\n  // and current value to the stock record\n  useEffect(() => {\n    const enhancedStocks = stocks.map(stock => {\n      stock.purchaseValue = stock.shares * stock.purchasePrice;\n      stock.currentPrice = Math.random() * 200 + 50;\n      stock.currentValue = stock.shares * stock.currentPrice;\n      stock.profit = stock.currentValue - stock.purchaseValue;\n      return stock;\n    });\n    setStockList(enhancedStocks);\n  }, [stocks]);\n  const addStock = evt => {\n    console.log('add stock clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"card-header-color\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [myName, \"'s Stock Portfolio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(StockList, {\n          data: stockList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          onClick: addStock,\n          children: \"Add stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R1oDJfpkKc9wOML3PBTFqSurw8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Card","CardHeader","CardBody","CardFooter","Button","sampleData","StockList","jsxDEV","_jsxDEV","App","_s","myName","stocks","setStocks","stockList","setStockList","enhancedStocks","map","stock","purchaseValue","shares","purchasePrice","currentPrice","Math","random","currentValue","profit","addStock","evt","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","size","onClick","_c","$RefreshReg$"],"sources":["/home/ec2-user/environment/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport { Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap';\nimport sampleData from './sampleData';\nimport StockList from './StockList';\n\nfunction App() {\n  \n  // Uncomment setMyName if required, for example, if the name\n  // is stored in the DynamoDB\n  const [myName/*, setMyName*/] = useState('Roger');\n  \n  const [stocks, setStocks] = useState([]);\n  const [stockList, setStockList] = useState([]);\n  \n  // Retrieve the current stock information when the page first loads\n  useEffect(() => {\n    setStocks(sampleData);\n  }, []);\n  \n  // With the stock data add purchase value, current price\n  // and current value to the stock record\n  useEffect(() => {\n    const enhancedStocks = stocks.map(stock => {\n      stock.purchaseValue = stock.shares * stock.purchasePrice;\n      stock.currentPrice = Math.random()*200 + 50;\n      stock.currentValue = stock.shares * stock.currentPrice;\n      stock.profit = stock.currentValue - stock.purchaseValue;\n      return stock;\n    })\n    setStockList(enhancedStocks);\n  }, [stocks])\n  \n  const addStock = evt => {\n    console.log('add stock clicked');\n  }\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <CardHeader className=\"card-header-color\">\n          <h4>{myName}'s Stock Portfolio</h4>\n        </CardHeader>\n        <CardBody>\n          <StockList data={stockList} />\n        </CardBody>\n        <CardFooter>\n          <Button size=\"sm\" onClick={addStock}>Add stock</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}